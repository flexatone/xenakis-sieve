name: CI

on:
  pull_request:
    branches:
      - default
  push:
    branches:
      - default
  release:
    types: published

jobs:
  build-and-test:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: ["1.60.0", stable]

    name: Build & Test / ${{ matrix.os }} / Rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  #-----------------------------------------------------------------------------
  quality:
    name: Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update stable && rustup default stable

      - name: Check formatting
        run: |
          rustup component add rustfmt
          cargo fmt -- --check

      - name: Lint with Clippy
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings

  #-----------------------------------------------------------------------------
  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install LVM
        run: apt-get install llvm

      - name: Install Rust
        run: rustup install --no-self-update stable && rustup default stable

      - name: Test with Coverage
        run: RUSTFLAGS="-C instrument-coverage" cargo test

      - name: Prepare Logs
        run: llvm-profdata merge -sparse default_*.profraw -o json5format.profdata


  #-----------------------------------------------------------------------------
  publish:
    name: Publish
    if: github.event_name == 'release'

    needs: [build-and-test, quality]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update stable && rustup default stable

      - name: Publish
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

