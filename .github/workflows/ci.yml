name: CI

on:
  pull_request:
    branches:
      - default
  push:
    branches:
      - default
  release:
    types: published

jobs:
  build-and-test:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: ["1.60.0", stable]

    name: Build & Test / ${{ matrix.os }} / Rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  #-----------------------------------------------------------------------------
  quality:
    name: Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update stable && rustup default stable

      - name: Check formatting
        run: |
          rustup component add rustfmt
          cargo fmt -- --check

      - name: Lint with Clippy
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings

  #-----------------------------------------------------------------------------
  # coverage-llm:
  #   name: Coverage LLM
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install LVM
  #       run: sudo apt-get install llvm

  #     - name: Install Rust
  #       run: |
  #         rustup install --no-self-update nightly && rustup default nightly
  #         rustup component add llvm-tools-preview

  #     - name: Test with Coverage
  #       run: RUSTFLAGS="-C instrument-coverage" cargo test

  #     - name: Prepare Logs
  #       run: |
  #         llvm-profdata merge -sparse default_*.profraw -o coverage.profdata
  #         llvm-cov report target/debug/xensieve -instr-profile=coverage.profdata
  #         llvm-cov export -format=lcov target/debug/xensieve -instr-profile=coverage.profdata > coverage.txt

  #-----------------------------------------------------------------------------
  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup install --no-self-update nightly && rustup default nightly
          rustup component add llvm-tools-preview

      - name: Install grcov
        run: cargo install grcov

      - name: Build
        env:
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo build

      - name: Test
        env:
          LLVM_PROFILE_FILE: grcov-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo test

      - name: Generate coverage
        run: |
          grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o ./target/debug/coverage/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: 6ecdfb7b-306b-4bdc-abbf-c393da9186c9
          files: target/debug/coverage/lcov
          slug: flexatone/xensieve-rs

  #-----------------------------------------------------------------------------
  publish:
    name: Publish
    if: github.event_name == 'release'

    needs: [build-and-test, quality]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup install --no-self-update stable && rustup default stable

      - name: Publish
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

